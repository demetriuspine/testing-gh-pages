{"version":3,"sources":["pages/Home.jsx","pages/NotFound.jsx","pages/Teste.jsx","RoutesConfigs.js","App.js","reportWebVitals.js","index.js"],"names":["Home","navigate","useNavigate","useState","walter","setState","loading","setLoading","teste","a","fetch","fetchApi","json","parse","type","onClick","name","NotFound","Teste","RoutesConfigs","exact","path","element","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAGe,SAASA,IACtB,IAAMC,EAAWC,cADY,EAEFC,mBAAS,SAFP,mBAEtBC,EAFsB,KAEdC,EAFc,OAGCF,oBAAS,GAHV,mBAGtBG,EAHsB,KAGbC,EAHa,KAIvBC,EAAK,uCAAG,8BAAAC,EAAA,6DACZF,GAAW,GACC,kDAFA,SAGWG,MADX,mDAFA,cAGNC,EAHM,gBAIQA,EAASC,OAJjB,OAINC,EAJM,OAKZR,EAASQ,GACTN,GAAW,GANC,4CAAH,qDASX,OACED,EAAU,aACR,gCACE,sCACA,wBAAQQ,KAAK,SAASC,QAAUP,EAAhC,0BACa,UAAXJ,EAAqBA,EAASA,EAAO,GAAGY,KAC1C,wBAAQF,KAAK,SAASC,QAAU,kBAAMd,EAAS,WAA/C,8BCpBO,SAASgB,IACtB,OACE,2CCFW,SAASC,IACtB,OACE,wCCEW,SAASC,IACtB,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,QAAU,cAACtB,EAAD,MAChC,cAAC,IAAD,CAAOqB,KAAK,SAASC,QAAU,cAACJ,EAAD,MAC/B,cAAC,IAAD,CAAOG,KAAK,IAAIC,QAAU,cAACL,EAAD,SCCjBM,MARf,WACE,OACE,cAAC,IAAD,UACE,cAACJ,EAAD,OCKSK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0952108f.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nexport default function Home() {\n  const navigate = useNavigate();\n  const [walter, setState] = useState('teste');\n  const [loading, setLoading] = useState(false);\n  const teste = async () => {\n    setLoading(true);\n    const url = 'https://www.breakingbadapi.com/api/characters/1';\n    const fetchApi = await fetch(url);\n    const parse = await fetchApi.json();\n    setState(parse);\n    setLoading(false);\n  }\n  \n  return (\n    loading ? 'Loading...' : (\n      <div>\n        <h1>Home</h1>\n        <button type=\"button\" onClick={ teste }>Say my name!</button>\n        { walter === 'teste' ? walter : walter[0].name }\n        <button type=\"button\" onClick={ () => navigate('/teste')  }>Mudar de rota</button>\n      </div>\n    )\n  )\n}\n","import React from 'react'\n\nexport default function NotFound() {\n  return (\n    <div>\n      NotFound\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function Teste() {\n  return (\n    <div>\n      Teste\n    </div>\n  )\n}\n","import React from 'react'\nimport { Routes, Route } from 'react-router-dom';\nimport Home from './pages/Home';\nimport NotFound from './pages/NotFound';\nimport Teste from './pages/Teste';\n\nexport default function RoutesConfigs() {\n  return (\n    <Routes>\n      <Route exact path=\"/\" element={ <Home /> } />\n      <Route path=\"/teste\" element={ <Teste /> } />\n      <Route path=\"*\" element={ <NotFound /> } />\n    </Routes>\n  )\n}\n","import React from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport RoutesConfigs from './RoutesConfigs';\n\nfunction App() {\n  return (\n    <HashRouter>\n      <RoutesConfigs />\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}